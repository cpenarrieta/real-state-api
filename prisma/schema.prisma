generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model lead {
  id          Int          @id @default(autoincrement())
  name        String?
  phone       String?
  email       String?
  address1    String?
  address2    String?
  city        String?
  province    String?
  zipCode     String?
  country     String?
  propertyId  Int?
  leadStatus  lead_status? @default(PENDING)
  visitorId   String?
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @default(now())
  notes       String?
  type        visit_type   @default(PROPERTY)
  userId      Int?
  mailStattus Boolean      @default(false)
  property    property?    @relation(fields: [propertyId], references: [id])
  user        user?        @relation(fields: [userId], references: [id])
}

model property {
  id                                  Int               @id @default(autoincrement())
  title                               String?
  userId                              Int
  createdAt                           DateTime          @default(now())
  updatedAt                           DateTime          @default(now())
  uuid                                String            @unique @default(dbgenerated())
  description                         String?
  bedrooms                            Int?
  bathrooms                           Int?
  lotSize                             Int?
  builtYear                           Int?
  grossTaxesLastYear                  Int?
  openHouse                           Boolean?          @default(false)
  strata                              Boolean?          @default(false)
  price                               Int?
  hidePrice                           Boolean?          @default(false)
  community                           String?
  address1                            String?
  address2                            String?
  city                                String?
  province                            String?
  zipCode                             String?
  floorPlans                          String[]
  videos                              String[]
  soldAt                              DateTime?
  propertyType                        property_type?
  currency                            currency?
  status                              property_status?  @default(ACTIVE)
  publishedStatus                     published_status? @default(DRAFT)
  mainPicture                         String?
  country                             String?
  webPaidUntil                        DateTime?
  username                            String?
  videoUrl                            String?
  videoType                           video_type?
  lat                                 Float?
  lon                                 Float?
  color                               String?
  listingId                           String?
  mainPictureLowRes                   String?
  mainImageId                         Int?
  openHouseActive                     Boolean?          @default(false)
  images_imagesToproperty_mainImageId images?           @relation("imagesToproperty_mainImageId", fields: [mainImageId], references: [id])
  user                                user              @relation(fields: [userId], references: [id])
  attachments                         attachments[]
  images                              images[]          @relation("images_propertyIdToproperty")
  lead                                lead[]
  openHouse_openHouseToproperty       openHouse[]
  order                               order[]
  visitor                             visitor[]
}

model user {
  id                 Int        @id @default(autoincrement())
  email              String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @default(now())
  uuid               String     @unique
  firstName          String?
  lastName           String?
  phone              String?
  address            String?
  picture            String?
  address1           String?
  address2           String?
  city               String?
  province           String?
  zipCode            String?
  country            String?
  pictureLowRes      String?
  stripeId           String?
  username           String?
  smallBio           String?
  onboardingComplete Boolean?   @default(false)
  profileComplete    Boolean?   @default(false)
  twitterLink        String?
  instagramLink      String?
  facebookLink       String?
  active             Boolean?   @default(true)
  website            String?
  trialUsed          Boolean?   @default(false)
  lead               lead[]
  order              order[]
  property           property[]
  visitor            visitor[]
}

model visitor {
  id         Int        @id @default(autoincrement())
  visitorId  String?
  propertyId Int?
  createdAt  DateTime?  @default(now())
  type       visit_type @default(PROPERTY)
  userId     Int?
  property   property?  @relation(fields: [propertyId], references: [id])
  user       user?      @relation(fields: [userId], references: [id])
}

model attachments {
  id         Int       @id @default(autoincrement())
  title      String?
  url        String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())
  propertyId Int
  active     Boolean?  @default(true)
  property   property  @relation(fields: [propertyId], references: [id])
}

model images {
  id                                    Int        @id @default(autoincrement())
  title                                 String?
  description                           String?
  propertyId                            Int        @default(dbgenerated())
  url                                   String?
  urlLowRes                             String?
  createdAt                             DateTime?  @default(now())
  updatedAt                             DateTime?  @default(now())
  active                                Boolean?   @default(true)
  order                                 Int?
  property                              property   @relation("images_propertyIdToproperty", fields: [propertyId], references: [id])
  property_imagesToproperty_mainImageId property[] @relation("imagesToproperty_mainImageId")
}

model order {
  id              Int       @id @default(autoincrement())
  userId          Int
  propertyId      Int
  sessionId       String?
  chargeId        String?   @unique
  paymentIntentId String?
  customerId      String?
  priceId         String?
  priceType       String?
  priceCountry    String?
  amountTotal     Int?
  refunded        Boolean?
  receiptUrl      String?
  paymentType     String?
  currency        String?
  billingCountry  String?
  billingPostal   String?
  billingEmail    String?
  billingName     String?
  paymentMethod   String?
  status          String?
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @default(now())
  paid            Boolean?
  property        property  @relation(fields: [propertyId], references: [id])
  user            user      @relation(fields: [userId], references: [id])
}

model openHouse {
  id         Int       @id @default(autoincrement())
  propertyId Int
  date       DateTime?
  timeStart  DateTime?
  timeEnd    DateTime?
  property   property  @relation(fields: [propertyId], references: [id])
}

enum currency {
  USD
  CAD
}

enum lead_status {
  PENDING
  STARRED
  CONTACTED
  BUYER
  ARCHIVED
}

enum property_status {
  ACTIVE
  INACTIVE
  SOLD
  HOLD
}

enum property_type {
  HOUSE
  TOWNHOUSE
  CONDO
  LAND
  OTHER
}

enum published_status {
  DRAFT
  PUBLISHED
  INACTIVE
}

enum video_type {
  YOUTUBE
  VIMEO
}

enum visit_type {
  PROPERTY
  USER
}
