generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model lead {
  id          Int          @default(autoincrement()) @id
  name        String?
  phone       String?
  email       String?
  address1    String?
  address2    String?
  city        String?
  province    String?
  zipCode     String?
  country     String?
  propertyId  Int          @default(autoincrement())
  lead_status lead_status? @default(PENDING)
  visitorId   String?
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @default(now())
  property    property     @relation(fields: [propertyId], references: [id])
}

model property {
  id                 Int               @default(autoincrement()) @id
  title              String?
  userId             Int               @default(autoincrement())
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @default(now())
  uuid               String            @default(dbgenerated()) @unique
  description        String?
  bedrooms           Int?
  bathrooms          Int?
  lotSize            Int?
  builtYear          Int?
  grossTaxesLastYear Int?
  openHouse          Boolean?          @default(false)
  strata             Boolean?          @default(false)
  price              Int?
  hidePrice          Boolean?          @default(false)
  community          String?
  address1           String?
  address2           String?
  city               String?
  province           String?
  zipCode            String?
  pictures           String[]
  floorPlans         String[]
  videos             String[]
  soldAt             DateTime?
  propertyType       property_type?
  currency           currency?
  status             property_status?  @default(ACTIVE)
  publishedStatus    published_status? @default(DRAFT)
  mainPicture        String?
  country            String?
  webPaidUntil       DateTime?
  username           String?
  videoUrl           String?
  videoType          video_type?
  lat                Float?
  lon                Float?
  color              String?
  listingId          String?
  mainPictureLowRes  String?
  user               user              @relation(fields: [userId], references: [id])
  attachments        attachments[]
  images             images[]
  lead               lead[]
}

model user {
  id            Int        @default(autoincrement()) @id
  email         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  uuid          String     @unique
  firstName     String?
  lastName      String?
  phone         String?
  address       String?
  picture       String?
  address1      String?
  address2      String?
  city          String?
  province      String?
  zipCode       String?
  country       String?
  pictureLowRes String?
  stripeId      String?
  username      String?
  smallBio      String?
  property      property[]
}

model visitor {
  id         Int       @default(autoincrement()) @id
  visitorId  String?
  propertyId Int       @default(autoincrement())
  createdAt  DateTime? @default(now())
}

model attachments {
  id         Int       @default(autoincrement()) @id
  title      String?
  url        String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())
  propertyId Int       @default(autoincrement())
  active     Boolean?  @default(true)
  property   property  @relation(fields: [propertyId], references: [id])
}

model images {
  id          Int       @default(autoincrement()) @id
  title       String?
  description String?
  propertyId  Int       @default(dbgenerated())
  url         String?
  urlLowRes   String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now())
  active      Boolean?  @default(true)
  property    property  @relation(fields: [propertyId], references: [id])
}

enum currency {
  CAD
  USD
}

enum lead_status {
  ARCHIVED
  BUYER
  CONTACTED
  PENDING
  STARRED
}

enum property_status {
  ACTIVE
  HOLD
  INACTIVE
  SOLD
}

enum property_type {
  CONDO
  HOUSE
  LAND
  OTHER
  TOWNHOUSE
}

enum published_status {
  DRAFT
  INACTIVE
  PUBLISHED
}

enum video_type {
  VIMEO
  YOUTUBE
}
